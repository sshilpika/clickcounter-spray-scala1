FORMAT: 1A

# click counter v1
The click counter service provides a *hosted counter* that can be queried and modified.

# Group Click Counter

## Counters [/counters]
The collection of counters

### Retrieve the collection of counters [GET]

+ Response 200 (application/json)
    + Header
    
            Content-Length: 14

    + Body

            ["123", "111"]

## Counter [/counters/{id}]
A single Counter object with all its details

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Counter to interact with.

### Retrieve a counter [GET]

+ Response 200 (application/json)
    + Header
    
            Content-Length: 34

    + Body

            { "min": 0, "value": 0, "max": 5 }

### Create a counter [PUT]

+ Parameters
    + min (required, number, `0`) ... The minimum value of the bounded counter.
    + max (required, number, `5`) ... The maximum value of the bounded counter.

+ Response 201
    + Header
    
            Location: http://myhost/counters/123
            Content-Length: 0

### Delete a counter [DELETE]

+ Response 204
    + Header

            Content-Length: 0

## Counter increment [/counters/{id}/increment]
The resource for incrementing this counter

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Counter to interact with.

### Increment a counter [POST]

+ Response 204 (application/json)
    + Header
    
            Content-Length: 0

## Counter decrement [/counters/{id}/decrement]
The resource for decrementing this counter

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Counter to interact with.

### Decrement a counter [POST]
+ Response 409 (text/plain)
    + Header
    
            Content-Length: 32

    + Body

            counter at min, cannot decrement

## Counter reset [/counters/{id}/reset]
The resource for resetting this counter

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Counter to interact with.

### Reset a counter [POST]

+ Response 204 (application/json)
    + Header
    
            Content-Length: 0

## Counter value stream [/counters/{id}/stream]
The event stream of this counter's values 

+ Parameters
    + id (required, number, `123`) ... Numeric `id` of the Counter to interact with.

### Retrieve a counter value stream - TODO: convert to JSON [GET]

+ Response 200 (text/event-stream)
    + Header
            
            Transfer-Encoding: chunked

    + Body

            data: {"min":0,"value":0,"max":5}

            data: {"min":0,"value":1,"max":5}

            data: {"min":0,"value":2,"max":5}

